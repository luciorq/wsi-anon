codecheck:
  image: ubuntu:20.04
  tags:
    - empaia-parallel
  before_script:
    - apt-get update -q && apt-get install -y -qq clang-format-10 git
  script:
    - ./clang-format.sh

build-wsi-anon:
  image: emscripten/emsdk
  tags:
    - empaia-parallel
  script:
    - make
    - make wasm
  artifacts:
    paths:
      - bin

test-wsi-anon:
  image: emscripten/emsdk
  tags:
    - empaia-parallel
  script:
    - apt-get update -q && apt-get install -yq libcunit1-dev
    - make tests
    - bin/utests
  artifacts:
    paths:
      - Test-Wsi-Anon-Results.xml

test-integration:
  image: registry.gitlab.com/empaia/integration/ci-docker-images/test-runner
  tags:
    - empaia-docker
    - testdata
  before_script:
    - cp sample.env .env
    - docker-compose -f docker-compose.test.yml down -v --remove-orphans
    - docker-compose -f docker-compose.test.yml up -d --build
  script:
    - docker exec wsi-anon_wsi-anon_1 pytest wrapper/python/test/test_anonymization.py::test_check_fileformat -vv
    - docker exec wsi-anon_wsi-anon_1 pytest wrapper/python/test/test_anonymization.py::test_anonymize_file_format -vv
    - docker exec wsi-anon_wsi-anon_1 pytest wrapper/python/test/test_anonymization.py::test_anonymize_file_format_only_label -vv
    - docker exec wsi-anon_wsi-anon_1 pytest wrapper/python/test/test_anonymization.py::test_anonymize_file_format_only_label_hamamatsu -vv
  after_script:
    - docker-compose -f docker-compose.test.yml down

publish-wsi-anon-package:
  only:
    - master
  image: node:16-slim
  tags:
    - empaia-parallel
  needs:
    - job: codecheck
    - job: test-wsi-anon
    - job: build-wsi-anon
      artifacts: true
  script:
    - echo '//gitlab.com/api/v4/projects/${CI_PROJECT_ID}/packages/npm/:_authToken=${CI_JOB_TOKEN}' > .npmrc
    - npm publish --registry https://gitlab.com/api/v4/projects/${CI_PROJECT_ID}/packages/npm/
